import os
import hashlib
import requests
import json
from app import UPLOAD_FOLDER

UPLOAD_FOLDER_PATH = os.path.join(os.getcwd(), UPLOAD_FOLDER)
VT_API_KEY = os.environ.get("VT_API_KEY")
VT_VALID_HASH_FNS = ["md5", "sha256", "sha1"]
OUTPUT_FILENAME = "scan_results.json"

def get_file_hash(filepath, algorithm="md5"):
    hash_func = hashlib.new(algorithm)
    with open(filepath, "rb") as f:
        while chunk := f.read(8192):
            hash_func.update(chunk)
    return hash_func.hexdigest()

def virus_total(file_hash: str):
    url = f"https://www.virustotal.com/api/v3/files/{file_hash}"
    headers = {"x-apikey": VT_API_KEY}
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return response.json()
    else:
        print(f"{response.status_code = }")
    return None

def scan_files(dir_path, algorithms=VT_VALID_HASH_FNS):
    for algorithm in algorithms:
        if algorithm not in VT_VALID_HASH_FNS:
            print(f"Invalid algorithm: {algorithm}")

    results = {}
    for filename in os.listdir(dir_path):
        filepath = os.path.join(dir_path, filename)
        if os.path.isfile(filepath):
            results[filename] = {}
            for algorithm in algorithms:
                file_hash = get_file_hash(filepath, algorithm=algorithm)
                analysis_result = virus_total(file_hash)

                write_to_json(filename=filename, vt_res=analysis_result)

                results[filename] = analysis_result
    return results

def write_to_json(filename, vt_res, output_file=OUTPUT_FILENAME):
    try:
        if os.path.exists(output_file):
            with open(output_file, "r") as json_file:
                results = json.load(json_file)
        else:
            results = {}

        results[filename] = vt_res if vt_res else None

        with open(output_file, 'w') as json_file:
            json.dump(results, json_file, indent=4)
    except Exception as e:
        print(e)

if __name__ == "__main__":
    try:
        scan_results = scan_files(UPLOAD_FOLDER_PATH, ["sha256"])
        print(scan_results)
    except Exception as e:
        print(e)
